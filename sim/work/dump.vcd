$date
	Wed Dec 27 15:39:04 2023
$end
$version
	QuestaSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module uvm_root $end
$upscope $end

$scope module top_tb $end

$scope module dut $end
$var wire 1 ! aa [3] $end
$var wire 1 " aa [2] $end
$var wire 1 # aa [1] $end
$var wire 1 $ aa [0] $end
$var wire 1 % ab [3] $end
$var wire 1 & ab [2] $end
$var wire 1 ' ab [1] $end
$var wire 1 ( ab [0] $end
$var wire 1 ) ma [3] $end
$var wire 1 * ma [2] $end
$var wire 1 + ma [1] $end
$var wire 1 , ma [0] $end
$var wire 1 - mb [3] $end
$var wire 1 . mb [2] $end
$var wire 1 / mb [1] $end
$var wire 1 0 mb [0] $end
$var wire 1 1 clk $end
$var wire 1 2 rst $end
$var wire 1 3 aout [4] $end
$var wire 1 4 aout [3] $end
$var wire 1 5 aout [2] $end
$var wire 1 6 aout [1] $end
$var wire 1 7 aout [0] $end
$var wire 1 8 mout [7] $end
$var wire 1 9 mout [6] $end
$var wire 1 : mout [5] $end
$var wire 1 ; mout [4] $end
$var wire 1 < mout [3] $end
$var wire 1 = mout [2] $end
$var wire 1 > mout [1] $end
$var wire 1 ? mout [0] $end

$scope module adder_inst $end
$var wire 1 ! add_in1 [3] $end
$var wire 1 " add_in1 [2] $end
$var wire 1 # add_in1 [1] $end
$var wire 1 $ add_in1 [0] $end
$var wire 1 % add_in2 [3] $end
$var wire 1 & add_in2 [2] $end
$var wire 1 ' add_in2 [1] $end
$var wire 1 ( add_in2 [0] $end
$var wire 1 1 clk $end
$var wire 1 2 rst $end
$var reg 5 @ add_out [4:0] $end
$upscope $end

$scope module mul_inst $end
$var wire 1 ) mul_in1 [3] $end
$var wire 1 * mul_in1 [2] $end
$var wire 1 + mul_in1 [1] $end
$var wire 1 , mul_in1 [0] $end
$var wire 1 - mul_in2 [3] $end
$var wire 1 . mul_in2 [2] $end
$var wire 1 / mul_in2 [1] $end
$var wire 1 0 mul_in2 [0] $end
$var wire 1 1 clk $end
$var wire 1 2 rst $end
$var reg 8 A mul_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 B UVM_HDL_MAX_WIDTH $end
$var parameter 32 C UVM_STREAMBITS $end
$var parameter 32 D UVM_RADIX $end
$var parameter 32 E UVM_MACRO_NUMFLAGS $end
$var parameter 32 F UVM_DEFAULT $end
$var parameter 32 G UVM_ALL_ON $end
$var parameter 32 H UVM_FLAGS_ON $end
$var parameter 32 I UVM_FLAGS_OFF $end
$var parameter 32 J UVM_COPY $end
$var parameter 32 K UVM_NOCOPY $end
$var parameter 32 L UVM_COMPARE $end
$var parameter 32 M UVM_NOCOMPARE $end
$var parameter 32 N UVM_PRINT $end
$var parameter 32 O UVM_NOPRINT $end
$var parameter 32 P UVM_RECORD $end
$var parameter 32 Q UVM_NORECORD $end
$var parameter 32 R UVM_PACK $end
$var parameter 32 S UVM_NOPACK $end
$var parameter 32 T UVM_PHYSICAL $end
$var parameter 32 U UVM_ABSTRACT $end
$var parameter 32 V UVM_READONLY $end
$var parameter 32 W UVM_NODEFPRINT $end
$var parameter 32 X UVM_MACRO_EXTRAS $end
$var parameter 32 Y UVM_FLAGS $end
$var parameter 32 Z UVM_UNPACK $end
$var parameter 32 [ UVM_CHECK_FIELDS $end
$var parameter 32 \ UVM_END_DATA_EXTRA $end
$var parameter 32 ] UVM_START_FUNCS $end
$var parameter 32 ^ UVM_SET $end
$var parameter 32 _ UVM_SETINT $end
$var parameter 32 ` UVM_SETOBJ $end
$var parameter 32 a UVM_SETSTR $end
$var parameter 32 b UVM_END_FUNCS $end
$var parameter 32 c UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 d UVM_STDOUT $end
$var parameter 32 e UVM_LINE_WIDTH $end
$var parameter 32 f UVM_NUM_LINES $end
$var parameter 32 g UVM_SMALL_STRING $end
$var parameter 32 h UVM_LARGE_STRING $end
$var reg 1 i uvm_start_uvm_declarations $end
$var integer 32 j uvm_global_random_seed $end
$var integer 32 k UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 l uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 m uvm_hdl_deposit $end
$var reg 1024 n value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 o uvm_hdl_force $end
$var reg 1024 p value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 q value [1023:0] $end
$var time 64 r force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 s uvm_hdl_release_and_read $end
$var reg 1024 t value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 u uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 v uvm_hdl_read $end
$var reg 1024 w value [1023:0] $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 x uvm_re_match $end
$var integer 32 y e $end
$var integer 32 z es $end
$var integer 32 { s $end
$var integer 32 | ss $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 } radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 ~ c [7:0] $end
$var integer 32 !! pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 "! uvm_oneway_hash $end
$var integer 32 #! seed $end
$var reg 1 $! msb $end
$var reg 8 %! current_byte [7:0] $end
$var reg 32 &! crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 '! uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 (! scope_separator [7:0] $end
$var reg 8 )! bracket_match [7:0] $end
$var integer 32 *! pos $end
$var integer 32 +! bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 ,! value [4095:0] $end
$var integer 32 -! size $end
$var integer 32 .! radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 /! uvm_get_array_index_int $end
$var reg 1 0! is_wildcard $end
$var integer 32 1! i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 2! is_wildcard $end
$var integer 32 3! i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 4! uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 5! timeout $end
$var reg 1 6! overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 7! timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 8! uvm_report_enabled $end
$var integer 32 9! verbosity $end
$var reg 2 :! severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 ;! severity [1:0] $end
$var integer 32 <! verbosity $end
$var integer 32 =! line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 >! verbosity $end
$var integer 32 ?! line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 @! verbosity $end
$var integer 32 A! line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 B! verbosity $end
$var integer 32 C! line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 D! verbosity $end
$var integer 32 E! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 F! uvm_string_to_severity $end
$var reg 2 G! sev [1:0] $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 H! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 I! clone $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 J! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 K! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 L! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 M! nba $end
$var integer 32 N! next_nba $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin mul_agent_pkg $end
$upscope $end

$scope begin add_agent_pkg $end
$upscope $end

$scope begin env_pkg $end
$upscope $end

$scope begin seq_lib_pkg $end
$upscope $end

$scope begin test_lib_pkg $end
$upscope $end

$scope begin top_tb_sv_unit $end
$upscope $end

$scope begin std $end
